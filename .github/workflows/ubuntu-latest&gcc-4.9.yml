name: ubuntu-latest&gcc-4.9

on:
  push:
  pull_request:
    
env:
  CC: gcc-4.9
  CXX: g++-4.9

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: install gcc env
      run: |
        echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main" | sudo tee -a /etc/apt/sources.list
        echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe" | sudo tee -a /etc/apt/sources.list
        sudo apt update
        sudo apt install gcc-4.9 g++-4.9
      shell: bash
      
    - name: install dependency
      run: |
        sudo apt-get install -y make zlib1g zlib1g-dev bzip2 liblz4-dev libasan0 openssl libmxml-dev
      
    - name: cmake project
      run: |
        cd ${{github.workspace}}
        mkdir build
        cd build
        cmake ../
        make
    
    - name: publish devel docker
      run: |
        cd ../
        cp dockerfiles/devel/dtc.cacheonly.yaml dockerfiles/devel/
        cp conf/log4cplus.conf dockerfiles/devel/
        cp build/src/core/dtcd dockerfiles/devel/
        cp build/src/agent/dtcagent dockerfiles/devel/
        cp build/src/agent-watchdog/agent-watchdog dockerfiles/devel/
        cp build/src/complex/async-connector dockerfiles/devel/
        cp build/src/connector/connector dockerfiles/devel/
        cp build/src/data_lifecycle/data_lifecycle_manager dockerfiles/devel/
        cp build/src/hwcserver/hwcserver dockerfiles/devel/

        cd dockerfiles/devel/
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

        docker build -t $DOCKER_USERNAME/devel:CacheOnly .
        docker push $DOCKER_USERNAME/devel:CacheOnly